<?xml version="1.0" encoding="utf-8" ?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/"
               xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  <sitecore>
    <settings>
      <!-- Context DB for execution -->
      <setting name="SiteCronContextDB" value="master" />
      <!-- Amount of seconds to add to the execute now task. Please make sure the setting is above 5 seconds to give enough time for SiteCron to reload. -->
      <setting name="SiteCronExecuteNowSeconds" value="10" />
      <!-- Highly Experimental -->
      <setting name="SiteCron.SavedHandlerType" value="" />
      <!-- SiteCron Environment variable which can be used while logging/email or getting environment specific settings -->
      <setting name="SiteCron.Environment" value="DEV" />

      <!-- In order to load all SiteCron scheduled items from the search index, we need a list of valid templates. We could have done this by writing custom content search code that might come later. Comma separated my friend! -->
      <setting name="SiteCron.ValidTemplates" value="{7F2C8881-6AE4-48CF-A499-7745CC4B2EB2},{49A27DC8-2A6A-48A2-A8EF-02A3DD0D3274},{B9B437B2-789C-48F6-AAE2-B49C4AA2A4BB},{40F6016F-C38D-4024-8B48-7DE2655E6007}" />
      
      <!-- Index used to perform Content Search that returns all SiteCron items based on the templates defined in the SiteCron.ValidTemplates setting-->
      <setting name="SiteCron.GetItemIndex" value="sitecore_master_index" />

      <!-- If using an Dedicated Publishing instance then by default run SiteCron jobs on the DP Server - set to false to run on CM-->
      <setting name="UsePublishingInstanceAsPrimaryServer" value="true" />

      <!-- Setting to enable disable Execute Now context menu -->
      <setting name="SiteCron.EnableExecuteNow" value="true" />
    </settings>
    <commands>
      <command name="sitecron:executejob" type="Helixbase.Feature.Sitecron.Core.Commands.ExecuteJob, Helixbase.Feature.Sitecron" resolve="true"  />
    </commands>
    <events>
      <event name="item:saved">
        <handler type="Helixbase.Feature.Sitecron.Core.Events.SitecronSavedHandler, Helixbase.Feature.Sitecron" method="OnItemSaved" resolve="true"/>
      </event>
      <event name="item:saved:remote">
        <handler type="Helixbase.Feature.Sitecron.Core.Events.SitecronSavedHandler, Helixbase.Feature.Sitecron" method="OnItemSaved" resolve="true"/>
      </event>
      <event name="item:saving">
        <handler type="Helixbase.Feature.Sitecron.Core.Events.SitecronSavingHandler, Helixbase.Feature.Sitecron" method="OnItemSaving"/>
      </event>
      <event name="item:deleted">
        <handler type="Helixbase.Feature.Sitecron.Core.Events.SitecronDeletedHandler, Helixbase.Feature.Sitecron" method="OnItemDeleted" resolve="true" />
      </event>
      <event name="item:deleted:remote">
        <handler type="Helixbase.Feature.Sitecron.Core.Events.SitecronDeletedHandler, Helixbase.Feature.Sitecron" method="OnItemDeleted" resolve="true"/>
      </event>
    </events>
    <pipelines>
      <initialize>
        <processor type="Helixbase.Feature.Sitecron.Core.Pipelines.InitializeSitecron, Helixbase.Feature.Sitecron" resolve="true" patch:after="*[last()]" />
      </initialize>
    </pipelines>
    <services>
      <register serviceType="Helixbase.Feature.Sitecron.Core.IScheduleManager, Helixbase.Feature.Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.DefaultScheduleManager, Helixbase.Feature.Sitecron" />
      
      <!-- DB Only Provider to load SiteCron Jobs -->
      <register serviceType="Helixbase.Feature.Sitecron.Core.Jobs.ISitecronJobProvider, Helixbase.Feature.Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.Jobs.InheritingSitecronJobProvider, Helixbase.Feature.Sitecron" /> 
      
      <!-- Config Only Provider to load SiteCron Jobs from config files -->
      <!--<register serviceType="Helixbase.Feature.Sitecron.Core.Jobs.ISitecronJobProvider, Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.Jobs.ConfigJobProvider, Sitecron" />-->

      <!-- DB jobs and Config jobs Provider to load SiteCron Jobs from config files -->
      <!--<register serviceType="Helixbase.Feature.Sitecron.Core.Jobs.ISitecronJobProvider, Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.Jobs.DBAndConfigJobProvider, Sitecron" />-->

      <!-- Index Provider to load SiteCron Jobs -->
      <!--<register serviceType="Helixbase.Feature.Sitecron.Core.Jobs.ISitecronJobProvider, Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.Jobs.IndexJobProvider, Sitecron" />-->  

      <register serviceType="Helixbase.Feature.Sitecron.Core.Jobs.ISitecronJobValidator, Helixbase.Feature.Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.Jobs.SitecronJobValidator, Helixbase.Feature.Sitecron" />
      <register serviceType="Helixbase.Feature.Sitecron.Core.Scheduling.ISitecronScheduler, Helixbase.Feature.Sitecron" implementationType="Helixbase.Feature.Sitecron.Core.Scheduling.QuartzSitecronScheduler, Helixbase.Feature.Sitecron" />
    </services>
    
    <log4net>
      <appender name="SitecronLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging">
        <file value="$(dataFolder)/logs/Helixbase.Feature.Sitecron.log.{date}.txt" />
        <appendToFile value="true" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
        </layout>
        <encoding value="utf-8" />
      </appender>
      <logger name="Sitecron" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="SitecronLogFileAppender"/>
      </logger>      
    </log4net>
  </sitecore>
</configuration>